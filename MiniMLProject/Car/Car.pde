

float carWidth = 5;
float carHeight = 10;
float cornerR = 10;
float a = 0;
float xoff = 200, yoff = 100;
float cx = -100, cy = 50;
float gx = 100, gy = -50;
float v = 0;
float vm = 80;
float dA, am=3.14;
//float[] params={0.9600919616284057,-1.879096451768178,-17.27601600925891,-1.0613979930747954,1.3643486488524545,0.7765914140254416,0.8504680974256593,-2.427166874874249,-0.7154028457209911,1.9145934905743363,0.9202584764884174,0.16307843019165022,1.431448006379707,-2.23213981869801,1.2814246271600902,1.4212056932202355,0.27440479973290094,25.63148266845062,-0.998279260558454,0.44823118942041174,0.5161296579128924,-0.14915023452792997,-5.2882999328441676,-1.697245234817479,0.19943904887673208,-0.33487243433947744,-3.3047947979721455,-0.6444182216280868,1.2621742782184942,-0.49751926617375813,-1.5792448915026465,-0.3722676063209345,-0.6245817453076934,-1.0843758280997409,-0.7586771298551336,1.5761024484294115,0.32026756706052173,0.12007492407911317,-3.0642394193797227,0.15490368357372905,3.7092643400438936,-1.1777279623133516};
//float[] params={1.0207560512772416,0.43576525780425307,7.5581186835125616,-1.1348455376681992,1.245714083144628,0.44672034536465155,-0.8037131339739848,2.2458514007129344,-0.7951766778830535,1.5098448560815603,1.6583802568110881,0.3061971160547402,2.043660454711229,-0.8783996870564738,0.8797031989721547,0.42068938853475224,-1.5844977040405783,-6.443248939609785,-1.1382418632950355,0.07209179337773103,-0.2508594917976859,-0.677588162408693,-9.818051585044769,-1.14460125503686,-0.723320550841599,-2.585369781730937,0.32673183347569923,-0.9362057175196308,1.2745464206723693,-0.33158610045270553,-0.759779906286192,-1.1443862495582633,-1.0296006709006535,-1.3610257101127796,-1.0413233993271458,-0.4078619224547629,-0.35233341015433184,-0.30931314631386675,0.7907582648082269,1.2831851680347819,3.588746304185299,2.1690915669727344};
float[] params={-0.1374173425667383,-0.9311774234906268,-19.17729927898946,-0.621016139798775,-0.08450204844466844,0.12199905084032679,-1.004252825013302,-2.8486353586366437,-1.2863621723431355,1.6035596829461147,1.4536897752790228,-0.26966502069893233,5.8299567738021665,-0.9979952400248688,0.4338423539797181,0.4321845151128404,-0.47799256705524545,13.726501337593948,-0.8583961847863455,-0.10876062227191884,0.44340621272765623,-1.641302870264627,2.598453836137687,-1.331113081224125,1.7972746733218805,0.8661533694678896,0.4008116223901004,-1.077237845099066,-1.3932430404257694,-1.1864268743287598,-0.7982394004512211,-1.0147317175307482,-0.874654909134275,-1.0837868264381771,-1.1413843544093472,1.2413192724612492,0.1635706454645618,-0.100745038428038,-0.7215815004511358,-0.08288805676931002,2.0849684101349113,2.4335072883075646};
int counter = 0;
void setup(){
  size(500,300);
}

void draw(){
  frameRate(20);
  background(#D3D3D3);
  fill(#E80018);
  circle(gx+xoff,gy+yoff,40);
  //if (counter<81){
    runNN();  
    updateState(0.1); 
    counter++;
  //} 
  
  pushMatrix();
  translate(cx+xoff,cy+yoff);
  rotate(a+PI/2);
  fill(#32CD32);
  rectMode(RADIUS);
  rect(0,0,carWidth,carHeight,cornerR,cornerR,0,0);
  //line(rectPos.x+20,rectPos.y+20,rectPos.x+20,rectPos.y+40);
  popMatrix();
}

void updateState(float dt){
  v = constrain(v,0,vm);
  dA = constrain(dA,-am,am);
  float vx = v*cos(a), vy = v*sin(a);
  a += dA*dt;
  cx += vx*dt;
  cy += vy*dt;
}

void runNN(){
  Matrix in = new Matrix(5,1);
  Matrix m1 = new Matrix(5,5);
  Matrix b1 = new Matrix(5,1);
  Matrix hout = new Matrix(5,1);
  Matrix m2 = new Matrix(2,5);
  Matrix b2 = new Matrix(2,1);
  Matrix out = new Matrix(2,1);
  float[][] in_t= {{cx},{cy},{a},{gx},{gy}};
  float[][] m1_t = new float[5][5];
  float[][] b1_t = new float[5][1];
  float[][] m2_t = new float[2][5];
  float[][] b2_t = new float[2][1];
  float[][] out_t = new float[2][1];
  int n=0;
  in.populate(in_t);
  for (int i=0;i<5;i++){
    for (int j=0;j<5;j++){
      m1_t[i][j]=params[n];
      n++;
    }
  }
  m1.populate(m1_t);
  for (int i=0;i<5;i++){
    b1_t[i][0]=params[n];
    n++;
  }
  b1.populate(b1_t);
  for (int i=0;i<2;i++){
    for (int j=0;j<5;j++){
      m2_t[i][j]=params[n];
      n++;
    }
  }
  m2.populate(m2_t);
  for (int i=0;i<2;i++){
    b2_t[i][0]=params[n];
    n++;
  }
  b2.populate(b2_t);
  hout = dotmul(m1,in);
  hout.addm(b1);
  hout.activate();
  out = dotmul(m2,hout);
  out.addm(b2);
  out_t=out.toArray();
  v=out_t[0][0];
  dA=out_t[1][0];
}

void mousePressed(){
  if (mouseButton == LEFT){
    cx = constrain(mouseX-xoff,0-xoff,100-xoff);
    cy = constrain(mouseY-yoff,10-yoff,200-yoff);
    a=0;v=0;dA=0;
  }
  //if (mouseButton == RIGHT){
  //  gx = mouseX-xoff;
  //  gy = mouseY-yoff;
  //  a=0;v=0;dA=0;
  //  cx = -100; cy = 50;
  //}
}
